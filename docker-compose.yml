version: '3.8'

services:
  
  db:
    image: postgres:13
    container_name: meetup-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: meetup
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d meetup"]
      interval: 5s
      timeout: 5s
      retries: 5
   

  meetup-service:
    build:
      context: ./apps/meetup-service
    container_name: meetup-service
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@db:5432/meetup?schema=public
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: >
      sh -c "npx prisma generate &&
      npx prisma migrate deploy &&
      npm run start:dev"

  auth-service:
    build:
      context: ./apps/auth-service
    container_name: auth-service
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@db:5432/meetup?schema=public
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    ports:
      - "3001:3001"
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: >
      sh -c "npx prisma generate &&
      npx prisma migrate deploy &&
      npx prisma migrate status &&
      npm run start:dev"

  rabbitmq:
    image: "rabbitmq:management"
    container_name: rabbitmq
    ports:
    - "5672:5672"
    - "15672:15672"
    networks:
    - app-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5



networks:
  app-network:
    driver: bridge


